%% Define Path

% p = mv_generate_paths('/net/store/projects/move/eeg/VP02/S01Vest');
p = mv_generate_paths('/net/store/projects/move/eeg/VP03/S01Active');

cfg=[];
cfg.quiet = 0;
%% Load File
EEG = mv_import_cnt(p);
%% Load Xensor
EEG = mv_load_xensor(EEG,p);

%% add Events
EEG = mv_add_events(EEG,p);
%% Filter
%EEG = pop_eegfilt(EEG,0,120,[],0,0); % lowpass
EEG = mv_filter_cont(EEG,p);
%[ALLEEG EEG]=eeg_store(ALLEEG,EEG,1);

pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)
%% resamlping to 512 Hz
EEG = mv_resample(EEG,p);
%pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)


%% Reject bad channels
EEG = mv_reject_channel(EEG,p);
%pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)

%% Rereference to Average
% 
EEG = mv_reref(EEG,p);    

%pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)

%% Rereference each amplifier separaetly  % NEEDS ONLY TO BE DONE ON SOME
%% SESSIONS IN DECEMBER!
% EEG = mv_reref2Amps(EEG,p);
%% Cleaning Continuous
EEG = mv_clean_continuous(EEG,p);
%pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)
%% Load ICA
%[EEG.icaweights, EEG.icasphere, mods]=runamica12(EEG.data,'outdir',p.path.amica)
EEG = mv_load_ICA(EEG,p);

%% EEG epoch
if ~check_EEG(EEG.preprocess,'Epoch')
    EEG = pop_epoch( EEG, {  '4'  }, [-15  10],  'epochinfo', 'yes','newname',EEG.preprocess);
    EEG.preprocess = [EEG.preprocess 'Epoch'];
    %pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)
end



%pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)
%% Cleaning Trial
[EEG] = mv_clean_trial(EEG,p);
%pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)
%% Dipole Fitting
EEG = mv_fit_dipole(EEG,p);
%%

%% Small script to check two different cleanings (rej1 and rej2)
% pop_eegplot(EEG, 1,1,0);
% rej1 = [12 4249;111835 112209;146146 146466;221204 234959;236029 249743;328594 331096;315939 316616;454957 459511;489914 493036;591636 595921;625390 627233;633939 634040;696848 699375;742140 742247;811581 813687;855299 861429;863785 868968;870494 885424;888729 889933;951113 956509;965251 969525;1034452 1058247;1140961 1141851;1144720 1148406;1324528 1324642;1350825 1351071;1362277 1363395;1436351 1447778;1450520 1451461;1472356 1472713;1477165 1477324;1579347 1583460;1609101 1609845;1617558 1619338;1621605 1632466;1707353 1707983;1828761 1829024;1846838 1846977;1850960 1851685;1879258 1881132;1902325 1903205;1931924 1933570;1992940 2025024;2034356 2036043;2054573 2097718;2131379 2132753;2143310 2143430;2137781 2141667;2164363 2167992;2171035 2173159;2177560 2179501;2311760 2312780;2323444 2328612;2330793 2332902;2338563 2339795;2340609 2342141;2347521 2349484;2352812 2354120;2356653 2358806;2360380 2364641;2366449 2371728;2473029 2473998;2479283 2480014;2482110 2487404;2495092 2497163;2501105 2502530;2506349 2510645;2529435 2533997;2545181 2547337;2554366 2564805];
% rej1 = [rej1 repmat([1,0.2,0.2],length(rej1),1)];
% rej2 = [3 28791;93845 94025;92075 92388;99044 99297;103239 104825;107593 108296;111874 112254;111266 111639;130425 130926;146240 146525;152012 152709;187979 188106;221220 222924;223538 228082;230237 232912;236474 244539;245524 248716;251616 252449;287415 288206;315731 316735;329635 330328;404209 404389;407489 407632;409893 410098;431589 431829;435382 436541;444080 444273;445236 445888;454953 460298;462916 465810;467068 467175;489925 492607;522732 522890;592515 592652;592959 595660;625604 627149;630103 630423;652866 653962;696910 699244;742009 742376;765937 766111;811517 811830;856511 861706;863828 885590;888703 890878;951774 956143;965307 969287;970794 972333;1034761 1044130;1045716 1058429;1093801 1093905;1141134 1141913;1144868 1148271;1254734 1254895;1324508 1324710;1350858 1350975;1362273 1363432;1436799 1445627;1450503 1451206;1454768 1454939;1477161 1477360;1478047 1478237;1482727 1482841;1500453 1501779;1512013 1512263;1511636 1511734;1532237 1533291;1541929 1543046;1554797 1554923;1579437 1582540;1614046 1614157;1617798 1618688;1624096 1629086;1630682 1633674;1707320 1707434;1704996 1705120;1745481 1746330;1828772 1829083;1830007 1830666;1841156 1841333;1846504 1846862;1848929 1850538;1879925 1881096;1884066 1884193;1895500 1895627;1902343 1903226;1914049 1914299;1915315 1915705;1932597 1932847;1931894 1932379;1993334 1993559;1994360 1994620;2002124 2003881;2005059 2010122;2012909 2013507;2014457 2015198;2018253 2020577;2021629 2023649;2034376 2035133;2058124 2059688;2061588 2063114;2067085 2079719;2085070 2085998;2082914 2083924;2092109 2097789;2098660 2102390;2134247 2135060;2138122 2138942;2140278 2141653;2143245 2143540;2164723 2165160;2172313 2173234;2178332 2179066;2182771 2183205;2236928 2237027;2312095 2312642;2313301 2313662;2323664 2325590;2332932 2333588;2337191 2337479;2339142 2342017;2347469 2349834;2353488 2353688;2360116 2363662;2366588 2368538;2370001 2371727;2373376 2375001;2447377 2447463;2459153 2459599;2473272 2474313;2479497 2479709;2483651 2484389;2486387 2487409;2491934 2493812;2495268 2497298;2501370 2502700;2506727 2508181;2509941 2510755;2528724 2530671;2531574 2533828;2545547 2547374;2553973 2564805];
% rej2 = [rej2 repmat([0.2,1,0.2],length(rej2),1)];
% append_rejections = [rej1; rej2];
% [~,IX] = sort(append_rejections(:,1));
% append_rejections = append_rejections(IX,:);
% eegplot(EEG.data,'srate',EEG.srate,'winlength',5,'events',EEG.event,'wincolor',[0.2 0.2 1],'command','rej=TMPREJ','winrej',append_rejections);setname 'Filt'];
%end
%pop_saveset(EEG,'filename',EEG.setname,'filepath',p.path.set)
